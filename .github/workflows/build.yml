name: Build

on:
  push:
    tags: ["v*"]
    branches:
    - '*'
    - '*/*'
    - '!ci-tests'
  pull_request:
    branches: [ master ]

env:
  SOLUTION: src/AddUp.RabbitMQ.Fakes.sln
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-2019
    steps:
    - name: Dump Environment
      run: |
        echo "Solution     : ${{ env.SOLUTION }}" 
        echo "Configuration: ${{ env.BUILD_CONFIGURATION }}"
    - name: Checkout
      uses: actions/checkout@v2
      # Git history is needed by GitVersion
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
      # Java 11 is needed by Sonar analyzer
    - uses: actions/setup-java@v1
      with:
        java-version: 11
        java-package: jdk
        architecture: x64
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.3
      with:
          versionSpec: '5.x' 
    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.3
    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner
    - name: Restore
      run: dotnet restore "${{ env.SOLUTION }}" --configfile ./nuget.config
    - name: Begin Sonar Analysis
      run: dotnet sonarscanner begin /key:"addupsolutions_AddUp.RabbitMQ.Fakes" /name:"AddUp.RabbitMQ.Fakes" /version:"${{ steps.gitversion.outputs.majorMinorPatch }}" /organization:"addupsolutions-oss" /d:sonar.cs.vstest.reportsPaths="**/TestResults/**/*.trx" /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/*.opencover.xml" /d:sonar.coverage.exclusions="**Tests.cs" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.verbose=true /d:sonar.host.url=https://sonarcloud.io
    - name: Build
      run: dotnet build "${{ env.SOLUTION }}" --configuration "${{ env.BUILD_CONFIGURATION }}" --no-restore
    - name: Test
      run: dotnet test "${{ env.SOLUTION }}" --configuration "${{ env.BUILD_CONFIGURATION }}" --no-restore --no-build --logger trx --collect "Code Coverage" --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./TestResults/
    - name: End Sonar Analysis
      run: dotnet sonarscanner end /d:sonar.login="${{secrets.SONAR_TOKEN}}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Collect Nuget Packages
      uses: actions/upload-artifact@v2
      with:
        name: nuget-packages
        path: ./src/AddUp.RabbitMQ.Fakes/bin/${{ env.BUILD_CONFIGURATION }}/*.nupkg
    ###########################################
    # Release creation / publication 
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
    - name: Upload Nuget Package to Release
      if: startsWith(github.ref, 'refs/tags/v') 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./src/AddUp.RabbitMQ.Fakes/bin/${{ env.BUILD_CONFIGURATION }}/AddUp.RabbitMQ.Fakes.${{ steps.gitversion.outputs.SemVer }}.nupkg
        asset_name: AddUp.RabbitMQ.Fakes.${{ steps.gitversion.outputs.SemVer }}.nupkg
        asset_content_type: application/zip      
    - name: Upload Symbols Nuget Package to Release
      if: startsWith(github.ref, 'refs/tags/v') 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./src/AddUp.RabbitMQ.Fakes/bin/${{ env.BUILD_CONFIGURATION }}/AddUp.RabbitMQ.Fakes.${{ steps.gitversion.outputs.SemVer }}.symbols.nupkg
        asset_name: AddUp.RabbitMQ.Fakes.${{ steps.gitversion.outputs.SemVer }}.symbols.nupkg
        asset_content_type: application/zip         

